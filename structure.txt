trading-ml-strategy/
│
├── README.md                       # Descripción general del proyecto, objetivos, instalación y uso
├── requirements.txt                # Librerías necesarias para reproducir el entorno
├── .gitignore                     
│
├── 📁 data/
│   ├── raw/                        # Datos históricos sin procesar (descargados con yfinance, etc.)
│   ├── processed/                  # Datos limpios y listos para análisis y modelado
│   └── indicators/                 # CSVs por activo con indicadores técnicos calculados a mano ( ichimoku, ondas de elliot)
│
├── 📁 notebooks/
│   ├── 01_eda.ipynb                # Exploración de datos (distribuciones, correlaciones, outliers, etc.)
│   ├── 02_indicators.ipynb         # Cálculo, validación y visualización de indicadores técnicos
│   ├── 03_signals.ipynb            # Reglas para señales de entrada (RSI, MACD, medias, divergencias, etc.)
│   ├── 04_backtesting.ipynb        # Simulación de estrategias y comparación de resultados
│   └── 05_modeling.ipynb           # Entrenamiento y evaluación de modelos de ML para predicción de señales
│
├── 📁 src/
│   ├── __init__.py
│   ├── data.py                     # Funciones para descarga, limpieza, resampleo, guardado
│   ├── indicators.py               # Funciones de TA: RSI, MACD, Ichimoku, Stochastic, SMA, etc.
│   ├── signals.py                  # Lógica de generación de señales (umbral RSI, cruces, divergencias)
│   ├── backtest.py                 # Simulación con aportes constantes, entradas condicionadas, métricas
│   └── modeling.py                 # Pipelines de ML, train/test split temporal, predicción de señales
│
├── 📁 models/
│   └── saved_models/               # Modelos entrenados (pkl, joblib, etc.) para carga en la app
│
├── 📁 mlflow/                      # Tracking de experimentos, métricas y parámetros
│      
│
├── 📁 reports/
│   ├── figures/                    # Visualizaciones exportadas (gráficos, comparaciones)
│   └── performance/                # Tablas con resultados de backtests, validaciones cruzadas, etc.
│
├── 📁 config/
│   └── parameters.yaml             # Hiperparámetros de indicadores, settings del modelo, thresholds
│
└── 📁 app/
    ├── main.py                     # App final en Streamlit: interfaz, comparador de estrategias
    └── components.py               # Funciones reutilizables para gráficos, cards, sliders, etc.